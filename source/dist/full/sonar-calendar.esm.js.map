{"version":3,"file":"sonar-calendar.esm.js","sources":["../../src/components/Calendar/Calendar.js","../../src/index.js"],"sourcesContent":["/**\n * Sonar Calendar - Main Calendar Component\n * \n * This is the main calendar component that handles the overall calendar state,\n * view management, and API interactions.\n */\n\nexport class SonarCalendar {\n  /**\n   * Create a new SonarCalendar instance\n   * @param {Object} options - Configuration options\n   * @param {HTMLElement} options.container - The container element for the calendar\n   * @param {string} [options.theme='light'] - The theme to use ('light' or 'dark')\n   * @param {string} [options.apiUrl] - Base URL for the events API\n   * @param {string} [options.dataSelector] - CSS selector for an element containing JSON data\n   */\n  constructor({ container, theme = 'light', apiUrl, dataSelector } = {}) {\n    if (!container) {\n      throw new Error('Container element is required');\n    }\n\n    this.container = container;\n    this.theme = theme;\n    this.apiUrl = apiUrl;\n    this.dataSelector = dataSelector;\n    this.currentDate = new Date();\n    this.events = [];\n    this.isLoading = false;\n    this.error = null;\n\n    // Initialize the calendar\n    this.initialize();\n  }\n\n\n  /**\n   * Initialize the calendar\n   * @private\n   */\n  initialize() {\n    // Apply theme\n    this.applyTheme(this.theme);\n    \n    // Set up the container\n    this.container.innerHTML = `\n      <div class=\"sonar-calendar\">\n        <div class=\"calendar-header\">\n          <h2>Sonar Calendar</h2>\n          <div class=\"calendar-controls\">\n            <button class=\"btn btn-icon\" id=\"prev\">\n              <span class=\"sr-only\">Previous</span>\n              <span aria-hidden=\"true\">←</span>\n            </button>\n            <h3 id=\"current-month\">${this.formatDate(this.currentDate, 'MMMM yyyy')}</h3>\n            <button class=\"btn btn-icon\" id=\"next\">\n              <span class=\"sr-only\">Next</span>\n              <span aria-hidden=\"true\">→</span>\n            </button>\n          </div>\n        </div>\n        <div class=\"calendar-body\" id=\"calendar-body\">\n          <p>Loading calendar...</p>\n        </div>\n      </div>\n    `;\n\n    // Set up event listeners\n    this.setupEventListeners();\n    \n    // Load initial data\n    this.loadEvents();\n  }\n\n\n  /**\n   * Apply the specified theme\n   * @param {string} theme - The theme to apply ('light' or 'dark')\n   */\n  applyTheme(theme) {\n    this.theme = theme;\n    document.documentElement.setAttribute('data-theme', theme);\n  }\n\n  /**\n   * Set up event listeners\n   * @private\n   */\n  setupEventListeners() {\n    // Navigation buttons\n    const prevBtn = this.container.querySelector('#prev');\n    const nextBtn = this.container.querySelector('#next');\n\n    if (prevBtn) {\n      prevBtn.addEventListener('click', () => this.navigate(-1));\n    }\n    if (nextBtn) {\n      nextBtn.addEventListener('click', () => this.navigate(1));\n    }\n  }\n\n  /**\n   * Navigate between months\n   * @param {number} direction - The direction to navigate (-1 for previous, 1 for next)\n   */\n  navigate(direction) {\n    const newDate = new Date(this.currentDate);\n    newDate.setMonth(newDate.getMonth() + direction);\n    this.currentDate = newDate;\n    this.updateCalendar();\n  }\n\n  /**\n   * Parse events from a data source\n   * @param {string} source - The source of the data ('api' or 'element')\n   * @returns {Promise<Array>} - Parsed events array\n   * @private\n   */\n  async parseEvents(source) {\n    try {\n      if (source === 'api' && this.apiUrl) {\n        const response = await fetch(this.apiUrl);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n      } else if (source === 'element' && this.dataSelector) {\n        const element = document.querySelector(this.dataSelector);\n        if (!element) {\n          throw new Error(`No element found with selector: ${this.dataSelector}`);\n        }\n        \n        // Get the data from the element's value or text content\n        const data = element.value !== undefined ? element.value : element.textContent;\n        if (!data) {\n          throw new Error('No data found in the specified element');\n        }\n        \n        return JSON.parse(data);\n      }\n      return [];\n    } catch (error) {\n      console.error(`Error parsing events from ${source}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Load events from the available data source\n   */\n  async loadEvents() {\n    this.isLoading = true;\n    this.error = null;\n    this.updateLoadingState();\n\n    try {\n      // Try to load from API first if available\n      if (this.apiUrl) {\n        this.events = await this.parseEvents('api');\n      } \n      // If no API URL or API failed, try loading from data element if specified\n      else if (this.dataSelector) {\n        this.events = await this.parseEvents('element');\n      } else {\n        this.events = [];\n        console.warn('No data source specified. Provide either apiUrl or dataSelector.');\n      }\n      \n      this.updateCalendar();\n    } catch (error) {\n      console.error('Error loading events:', error);\n      this.error = error.message;\n      this.showError(error.message);\n    } finally {\n      this.isLoading = false;\n      this.updateLoadingState();\n    }\n  }\n\n  /**\n   * Update the calendar display\n   * @private\n   */\n  updateCalendar() {\n    const monthElement = this.container.querySelector('#current-month');\n    if (monthElement) {\n      monthElement.textContent = this.formatDate(this.currentDate, 'MMMM yyyy');\n    }\n\n    // TODO: Implement calendar grid rendering\n    const calendarBody = this.container.querySelector('#calendar-body');\n    if (calendarBody) {\n      calendarBody.innerHTML = `\n        <div class=\"calendar-month\">\n          <p>Calendar view for ${this.formatDate(this.currentDate, 'MMMM yyyy')} will be implemented here.</p>\n          <p>Found ${this.events.length} events.</p>\n        </div>\n      `;\n    }\n  }\n\n  /**\n   * Update loading state\n   * @private\n   */\n  updateLoadingState() {\n    const calendarBody = this.container.querySelector('#calendar-body');\n    if (!calendarBody) return;\n\n    if (this.isLoading) {\n      calendarBody.innerHTML = '<div class=\"loading\">Loading events...</div>';\n    } else if (this.error) {\n      calendarBody.innerHTML = `\n        <div class=\"error\">\n          <p>Error loading events: ${this.error}</p>\n          <button class=\"btn btn-primary\" id=\"retry-load\">Retry</button>\n        </div>\n      `;\n      \n      const retryBtn = calendarBody.querySelector('#retry-load');\n      if (retryBtn) {\n        retryBtn.addEventListener('click', () => this.loadEvents());\n      }\n    }\n  }\n\n  /**\n   * Show error message\n   * @param {string} message - The error message to display\n   * @private\n   */\n  showError(message) {\n    console.error('Calendar Error:', message);\n    // Error display is handled in updateLoadingState\n  }\n\n  /**\n   * Format a date string\n   * @param {Date} date - The date to format\n   * @param {string} format - The format string\n   * @returns {string} The formatted date string\n   * @private\n   */\n  formatDate(date, format) {\n    // Simple date formatting - can be enhanced with a library like date-fns\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      weekday: 'long',\n    };\n    \n    return new Intl.DateTimeFormat('en-US', options).format(date);\n  }\n}\n","/**\n * Sonar Calendar - Main Entry Point\n * \n * This is the main entry point for the Sonar Calendar library.\n * It initializes the calendar and sets up the necessary event listeners.\n */\n\nimport './styles/base.css';\nimport './styles/themes/light.css'; // Default theme\nimport { SonarCalendar } from './components/Calendar/Calendar';\n\n/**\n * Initialize the Sonar Calendar\n * @param {Object} options - Configuration options for the calendar\n * @param {string} options.selector - CSS selector for the container element\n * @param {string} [options.theme='light'] - Theme to use ('light' or 'dark')\n * @param {string} [options.apiUrl] - Base URL for the events API\n * @param {string} [options.dataSelector] - CSS selector for an element containing JSON data\n * @returns {SonarCalendar} - The initialized calendar instance\n */\nfunction initSonarCalendar(options = {}) {\n  const {\n    selector = '#calendar',\n    theme = 'light',\n    apiUrl,\n    dataSelector\n  } = options;\n\n  // Find the container element\n  const container = document.querySelector(selector);\n  if (!container) {\n    console.error(`No element found with selector: ${selector}`);\n    return null;\n  }\n\n  // Initialize the calendar\n  const calendar = new SonarCalendar({\n    container,\n    theme,\n    apiUrl,\n    dataSelector\n  });\n\n  return calendar;\n}\n\n// Export the initialization function and main class\nwindow.SonarCalendar = {\n  init: initSonarCalendar,\n  Calendar: SonarCalendar\n};\n\nexport { SonarCalendar, initSonarCalendar };\n"],"names":[],"mappings":"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"}