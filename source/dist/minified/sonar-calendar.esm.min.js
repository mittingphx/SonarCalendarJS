class e{constructor(e,t="light",n){this.event=e,this.theme=t,this.onClick=n,this.element=this.createElement()}createElement(){const{id:e,title:t,start:n,end:i,description:a,category:s}=this.event,r=this.formatTime(n),l=this.formatTime(i),d=s?`event-category-${s.toLowerCase().replace(/\s+/g,"-")}`:"",o=document.createElement("div");if(o.className=`event-card ${d} theme-${this.theme}`,o.dataset.eventId=e,o.setAttribute("role","button"),o.setAttribute("tabindex","0"),o.setAttribute("aria-label",`View details for ${t}`),o.tabIndex=0,o.setAttribute("role","button"),o.setAttribute("aria-label",`View details for ${t}`),o.innerHTML=`\n      <div class="event-card__header">\n        <h3 class="event-card__title">${t}</h3>\n        ${s?`<span class="event-card__category">${s}</span>`:""}\n      </div>\n      <div class="event-card__time">\n        <time datetime="${n}">${r}</time> - <time datetime="${i}">${l}</time>\n      </div>\n      ${a?`<p class="event-card__description">${a}</p>`:""}\n      <div class="event-card__more">View details</div>\n    `,this.onClick){const e=e=>{e.preventDefault(),e.stopPropagation(),this.onClick(this.event)};o.addEventListener("click",e),o.addEventListener("keydown",(t=>{"Enter"!==t.key&&" "!==t.key||(t.preventDefault(),e(t))}))}return o}formatTime(e){return new Date(e).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}render(e){e.appendChild(this.element)}update(e){this.event={...this.event,...e};const t=this.createElement();this.element.parentNode.replaceChild(t,this.element),this.element=t}}class t{constructor(e,t,n="light"){this.event=e,this.onClose=t,this.theme=n,this.element=this.createElement()}createElement(){const{id:e,title:t,start:n,end:i,description:a,category:s,location:r}=this.event,l=this.formatDate(n),d=this.formatTime(n),o=this.formatTime(i),c=this.calculateDuration(n,i),h=document.createElement("div");return h.className=`event-details theme-${this.theme}`,h.dataset.eventId=e,h.innerHTML=`\n      <div class="event-details__overlay"></div>\n      <div class="event-details__content">\n        <button class="event-details__close" aria-label="Close details">\n          <span aria-hidden="true">&times;</span>\n        </button>\n        \n        <div class="event-details__header">\n          ${s?`<span class="event-details__category">${s}</span>`:""}\n          <h2 class="event-details__title">${t}</h2>\n        </div>\n        \n        <div class="event-details__info">\n          <div class="event-details__info-item">\n            <span class="event-details__info-label">Date:</span>\n            <time datetime="${n}">${l}</time>\n          </div>\n          <div class="event-details__info-item">\n            <span class="event-details__info-label">Time:</span>\n            <time datetime="${n}">${d}</time> - <time datetime="${i}">${o}</time>\n            <span class="event-details__duration">(${c})</span>\n          </div>\n          ${r?`\n            <div class="event-details__info-item">\n              <span class="event-details__info-label">Location:</span>\n              <span>${r}</span>\n            </div>\n          `:""}\n        </div>\n        \n        ${a?`\n          <div class="event-details__description">\n            <h3>Description</h3>\n            <p>${a}</p>\n          </div>\n        `:""}\n        \n        <div class="event-details__actions">\n          <button class="btn btn--secondary">Edit</button>\n          <button class="btn btn--primary">Add to Calendar</button>\n        </div>\n      </div>\n    `,h.querySelector(".event-details__overlay").addEventListener("click",(()=>this.close())),h.querySelector(".event-details__close").addEventListener("click",(()=>this.close())),h}formatDate(e){return new Date(e).toLocaleDateString(void 0,{weekday:"long",year:"numeric",month:"long",day:"numeric"})}formatTime(e){return new Date(e).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}calculateDuration(e,t){const n=new Date(e),i=new Date(t)-n,a=Math.floor(i/36e5),s=Math.floor(i%36e5/6e4);return a>0?`${a} hour${a>1?"s":""} ${s} min${1!==s?"s":""}`:`${s} minute${1!==s?"s":""}`}close(){this.element.classList.add("event-details--closing"),setTimeout((()=>{this.element.remove(),this.onClose&&this.onClose()}),300)}render(e){e.appendChild(this.element),requestAnimationFrame((()=>{this.element.classList.add("event-details--visible")}))}}class n{constructor({initialView:e="upcoming",onChange:t,theme:n="light"}={}){this.views=["upcoming","month","week","day"],this.activeView=e,this.onChange=t,this.theme=n,this.element=this.createElement()}createElement(){const e=document.createElement("div");return e.className=`view-toggle theme-${this.theme}`,e.setAttribute("role","tablist"),e.setAttribute("aria-label","Calendar view"),this.views.forEach((t=>{const n=document.createElement("button");n.className="view-toggle__button "+(t===this.activeView?"is-active":""),n.textContent=this.formatViewName(t),n.dataset.view=t,n.setAttribute("role","tab"),n.setAttribute("aria-selected",t===this.activeView?"true":"false"),n.setAttribute("aria-controls","calendar-view"),n.addEventListener("click",(()=>this.setActiveView(t))),e.appendChild(n)})),e}formatViewName(e){return e.charAt(0).toUpperCase()+e.slice(1)}setActiveView(e){this.views.includes(e)&&e!==this.activeView&&(this.element.querySelectorAll(".view-toggle__button").forEach((t=>{const n=t.dataset.view===e;t.classList.toggle("is-active",n),t.setAttribute("aria-selected",n?"true":"false")})),this.activeView=e,this.onChange&&this.onChange(e))}setTheme(e){this.theme=e,this.element.classList.toggle("theme-dark","dark"===e),this.element.classList.toggle("theme-light","light"===e)}render(e){e.appendChild(this.element)}}class i{constructor({initialDate:e=new Date,onChange:t,theme:n="light"}={}){this.selectedDate=new Date(e),this.onChange=t,this.theme=n,this.months=["January","February","March","April","May","June","July","August","September","October","November","December"],this.element=this.createElement()}createElement(){const e=document.createElement("div");e.className=`date-picker theme-${this.theme}`;const t=document.createElement("div");t.className="date-picker__nav";const n=document.createElement("button");n.className="date-picker__nav-button",n.innerHTML="&larr;",n.setAttribute("aria-label","Previous month"),n.addEventListener("click",(()=>this.navigate(-1)));const i=document.createElement("button");i.className="date-picker__nav-button",i.innerHTML="&rarr;",i.setAttribute("aria-label","Next month"),i.addEventListener("click",(()=>this.navigate(1))),this.monthYearDisplay=document.createElement("span"),this.monthYearDisplay.className="date-picker__month-year",this.updateMonthYearDisplay(),t.appendChild(n),t.appendChild(this.monthYearDisplay),t.appendChild(i),this.calendarGrid=document.createElement("div"),this.calendarGrid.className="date-picker__grid",this.calendarGrid.setAttribute("role","grid"),this.calendarGrid.setAttribute("aria-label","Calendar");const a=document.createElement("div");return a.className="date-picker__day-headers",["Su","Mo","Tu","We","Th","Fr","Sa"].forEach((e=>{const t=document.createElement("div");t.className="date-picker__day-header",t.textContent=e,t.setAttribute("aria-label",e),a.appendChild(t)})),this.daysContainer=document.createElement("div"),this.daysContainer.className="date-picker__days",this.renderDays(),this.calendarGrid.appendChild(a),this.calendarGrid.appendChild(this.daysContainer),e.appendChild(t),e.appendChild(this.calendarGrid),e}updateMonthYearDisplay(){const e=this.months[this.selectedDate.getMonth()],t=this.selectedDate.getFullYear();this.monthYearDisplay.textContent=`${e} ${t}`,this.monthYearDisplay.setAttribute("aria-live","polite")}renderDays(){this.daysContainer.innerHTML="";const e=this.selectedDate.getFullYear(),t=this.selectedDate.getMonth(),n=new Date(e,t,1).getDay(),i=new Date(e,t+1,0).getDate();for(let a=0;a<42;a++){const s=a-n+1,r=document.createElement("button");if(r.className="date-picker__day",r.setAttribute("role","gridcell"),s>0&&s<=i){r.textContent=s,r.dataset.day=s,r.setAttribute("aria-label",new Date(e,t,s).toLocaleDateString());const n=new Date;s===n.getDate()&&t===n.getMonth()&&e===n.getFullYear()&&r.classList.add("is-today"),s===this.selectedDate.getDate()?(r.classList.add("is-selected"),r.setAttribute("aria-selected","true")):r.setAttribute("aria-selected","false"),r.addEventListener("click",(()=>this.selectDay(s)))}else r.classList.add("is-empty"),r.setAttribute("aria-hidden","true");this.daysContainer.appendChild(r)}}navigate(e){this.selectedDate.setMonth(this.selectedDate.getMonth()+e),this.updateMonthYearDisplay(),this.renderDays()}selectDay(e){const t=new Date(this.selectedDate);t.setDate(e),this.selectedDate=t,this.renderDays(),this.onChange&&this.onChange(t)}setDate(e){this.selectedDate=new Date(e),this.updateMonthYearDisplay(),this.renderDays()}setTheme(e){this.theme=e,this.element.className=`date-picker theme-${e}`}getDate(){return new Date(this.selectedDate)}}class a{constructor({container:e,theme:t="light",apiUrl:n,dataSelector:i}={}){if(!e)throw new Error("Container element is required");this.container=e,this.theme=t,this.apiUrl=n,this.dataSelector=i,this.currentDate=new Date,this.events=[],this.isLoading=!1,this.error=null,this.activeEvent=null,this.activeEventDetails=null,this.currentView="upcoming",this.handleEventClick=this.handleEventClick.bind(this),this.closeEventDetails=this.closeEventDetails.bind(this),this.handlePopState=this.handlePopState.bind(this),this.initialize(),this.handleViewChange=this.handleViewChange.bind(this),this.handleDateChange=this.handleDateChange.bind(this)}initialize(){this.setTheme(this.theme),this.container.innerHTML=`\n      <div class="sonar-calendar">\n        <div class="calendar-header">\n          <h2>Sonar Calendar</h2>\n          <div class="calendar-controls">\n            <button class="btn btn-icon" id="prev">\n              <span class="sr-only">Previous</span>\n              <span aria-hidden="true">←</span>\n            </button>\n            <h3 id="current-month">${this.formatDate(this.currentDate,"MMMM yyyy")}</h3>\n            <button class="btn btn-icon" id="next">\n              <span class="sr-only">Next</span>\n              <span aria-hidden="true">→</span>\n            </button>\n          </div>\n        </div>\n        <div class="calendar-body" id="calendar-body">\n          <p>Loading calendar...</p>\n        </div>\n      </div>\n    `,this.addStyles(),this.setupEventListeners(),window.addEventListener("popstate",this.handlePopState),this.loadEvents()}createHeader(){const e=document.createElement("div");e.className="calendar-header",this.datePicker=new i({initialDate:this.currentDate,onChange:this.handleDateChange,theme:this.theme}),this.viewToggle=new n({initialView:this.currentView,onChange:this.handleViewChange,theme:this.theme});const t=document.createElement("div");t.className="calendar-header__content";const a=document.createElement("div");a.className="calendar-date-picker",this.datePicker.render(a),t.appendChild(a);const s=document.createElement("div");return s.className="calendar-view-toggle",this.viewToggle.render(s),t.appendChild(s),e.appendChild(t),e.outerHTML}addStyles(){const e="sonar-calendar-styles";if(document.getElementById(e))return;const t=document.createElement("style");t.id=e,t.textContent="\n      .sonar-calendar {\n        max-width: 800px;\n        margin: 0 auto;\n        font-family: var(--font-sans);\n      }\n      \n      .calendar-header {\n        margin-bottom: 1.5rem;\n      }\n      \n      .calendar-header__content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        gap: 1rem;\n      }\n      \n      .calendar-date-picker {\n        flex: 1;\n      }\n      \n      .calendar-view-toggle {\n        flex-shrink: 0;\n      }\n      \n      .calendar-header__content {\n        display: flex;\n        align-items: center;\n      }\n      \n      .calendar-title {\n        font-size: 1.5rem;\n        color: var(--color-text);\n        margin: 0 0 1rem 0;\n      }\n      \n      .calendar-view-toggle {\n        margin-left: 1rem;\n      }\n      \n      .calendar-events-container {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n        gap: 1rem;\n      }\n      \n      .no-events {\n        color: var(--color-text-muted);\n        font-style: italic;\n        grid-column: 1 / -1;\n        text-align: center;\n        padding: 2rem 0;\n      }\n    ",document.head.appendChild(t)}setTheme(e){this.theme=e,this.viewToggle&&this.viewToggle.setTheme(e),this.updateCalendar()}setupEventListeners(){const e=this.container.querySelector("#prev"),t=this.container.querySelector("#next");e&&e.addEventListener("click",(()=>this.navigate(-1))),t&&t.addEventListener("click",(()=>this.navigate(1)))}handleEventClick(e){this.activeEvent=e,this.showEventDetails(e)}showEventDetails(e){this.closeEventDetails(),this.activeEventDetails=new t(e,this.closeEventDetails.bind(this),this.theme),this.activeEventDetails.render(this.container),window.history.pushState({eventId:e.id},`Event: ${e.title}`,`#event-${e.id}`)}closeEventDetails(){this.activeEventDetails&&(this.activeEventDetails.close(),this.activeEventDetails=null,this.activeEvent=null,window.location.hash.startsWith("#event-")&&window.history.pushState(null,"",window.location.pathname))}handlePopState(){const e=window.location.hash.replace("#event-","");if(e){const t=this.events.find((t=>t.id===e));t&&this.showEventDetails(t)}else this.closeEventDetails()}handleViewChange(e){["upcoming","month","week","day"].includes(e)&&(this.currentView=e,this.updateCalendar())}handleDateChange(e){this.currentDate=new Date(e),this.updateCalendar()}navigate(e){this.currentDate.setMonth(this.currentDate.getMonth()+e),this.datePicker&&this.datePicker.setDate(this.currentDate),this.updateCalendar()}async parseEvents(e){try{if("api"===e&&this.apiUrl){const e=await fetch(this.apiUrl);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}if("element"===e&&this.dataSelector){const e=document.querySelector(this.dataSelector);if(!e)throw new Error(`No element found with selector: ${this.dataSelector}`);const t=void 0!==e.value?e.value:e.textContent;if(!t)throw new Error("No data found in the specified element");return JSON.parse(t)}return[]}catch(t){throw console.error(`Error parsing events from ${e}:`,t),t}}async loadEvents(){this.isLoading=!0,this.error=null,this.updateLoadingState();try{this.apiUrl?this.events=await this.parseEvents("api"):this.dataSelector?this.events=await this.parseEvents("element"):(this.events=[],console.warn("No data source specified. Provide either apiUrl or dataSelector.")),this.updateCalendar()}catch(e){console.error("Error loading events:",e),this.error=e.message,this.showError(e.message)}finally{this.isLoading=!1,this.updateLoadingState()}}updateCalendar(){const e=this.container.querySelector("#calendar-body");e&&("upcoming"===this.currentView?this.renderUpcomingEvents(e):"month"===this.currentView?this.renderMonthView(e):"week"===this.currentView?this.renderWeekView(e):"day"===this.currentView&&this.renderDayView(e))}renderUpcomingEvents(e){const t=this.events.filter((e=>new Date(e.start)>=this.currentDate));this.renderEvents(e,t)}renderMonthView(e){const t=this.events.filter((e=>{const t=new Date(e.start);return t.getMonth()===this.currentDate.getMonth()&&t.getFullYear()===this.currentDate.getFullYear()}));this.renderEvents(e,t)}renderWeekView(e){const t=this.events.filter((e=>{const t=new Date(e.start),n=new Date(this.currentDate);n.setDate(n.getDate()-n.getDay());const i=new Date(n);return i.setDate(i.getDate()+7),t>=n&&t<i}));this.renderEvents(e,t)}renderDayView(e){const t=this.events.filter((e=>new Date(e.start).toDateString()===this.currentDate.toDateString()));this.renderEvents(e,t)}renderEvents(t,n=this.events){const i=document.createElement("div");if(i.className="events-grid",n.forEach((t=>{const n=new e(t,this.theme);n.element.addEventListener("click",(()=>this.handleEventClick(t))),n.element.setAttribute("tabindex","0"),n.element.addEventListener("keydown",(e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),this.handleEventClick(t))})),i.appendChild(n.element)})),t.innerHTML="",t.appendChild(i),0===n.length){const e=document.createElement("p");e.className="no-events",e.textContent=`No ${this.currentView} events found.`,i.appendChild(e)}if(window.location.hash.startsWith("#event-")&&!this.activeEvent){const e=window.location.hash.replace("#event-",""),t=this.events.find((t=>t.id.toString()===e));t&&setTimeout((()=>this.showEventDetails(t)),0)}}updateCalendar(){const e=this.container.querySelector("#calendar-body")||this.container;"upcoming"===this.currentView?this.renderUpcomingEvents(e):"month"===this.currentView?this.renderMonthView(e):"week"===this.currentView?this.renderWeekView(e):"day"===this.currentView&&this.renderDayView(e);const t=this.container.querySelector(".calendar-title");t&&("upcoming"===this.currentView?t.textContent="Upcoming Events":t.textContent=this.formatDate(this.currentDate,"MMMM yyyy"))}updateLoadingState(){const e=this.container.querySelector("#calendar-body");if(e)if(this.isLoading)e.innerHTML='<div class="loading">Loading events...</div>';else if(this.error){e.innerHTML=`\n        <div class="error">\n          <p>Error loading events: ${this.error}</p>\n          <button class="btn btn-primary" id="retry-load">Retry</button>\n        </div>\n      `;const t=e.querySelector("#retry-load");t&&t.addEventListener("click",(()=>this.loadEvents()))}}showError(e){console.error("Calendar Error:",e)}formatDate(e,t){return new Intl.DateTimeFormat("en-US",{year:"numeric",month:"long",day:"numeric",weekday:"long"}).format(e)}}function s(e={}){const{selector:t="#calendar",theme:n="light",apiUrl:i,dataSelector:s}=e,r=document.querySelector(t);if(!r)return console.error(`No element found with selector: ${t}`),null;return new a({container:r,theme:n,apiUrl:i,dataSelector:s})}window.SonarCalendar={init:s,Calendar:a};export{a as SonarCalendar,s as initSonarCalendar};
//# sourceMappingURL=sonar-calendar.esm.min.js.map
